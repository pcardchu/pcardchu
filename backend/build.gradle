plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.3'
	id 'io.spring.dependency-management' version '1.1.4'

}

group = 'com.ssafy'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'

	// SpringDoc
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'

	// jjwt
	implementation 'io.jsonwebtoken:jjwt-api:0.12.4'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.4'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.4'


	// cassandra
	implementation 'org.springframework.boot:spring-boot-starter-data-cassandra'
	
	// Selenium  Crawling
	implementation group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '4.5.0'
	
	// MongoDB
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	//querydsl
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa:3.2.1'
	implementation 'com.querydsl:querydsl-apt'
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	// Google Gson
	implementation 'com.google.code.gson:gson:2.8.5'
	implementation 'org.json:json:20240303'

}




//Q객체 저장위치
def querydslDir = layout.buildDirectory.dir("generated/querydsl").get().asFile

sourceSets {
	main.java.srcDirs += [querydslDir]
}
tasks.withType(JavaCompile).configureEach {
	options.getGeneratedSourceOutputDirectory().set(file(querydslDir))
}
clean {
	delete file(querydslDir)
}